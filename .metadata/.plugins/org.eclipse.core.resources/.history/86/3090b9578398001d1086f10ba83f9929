package com.capgemini.university_course_selection.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.capgemini.university_course_selection.entity.Staff;
import com.capgemini.university_course_selection.service.StaffService;

@RestController
public class StaffController {

	@Autowired
	private StaffService staffService;

	@PostMapping("/savestaff")
	public String saveStaff(@RequestBody Staff s)throws StaffIdAlreadyExistsException{
		Staff save = staffService.saveStaff(s);
		return "Staff data Saved Sucessfully";
	}

	@GetMapping("/allstaffs")
	public ResponseEntity<List<Staff>> getAllStaffEntity() {
		List<Staff> Staff = staffService.getAllStaff();
		return new ResponseEntity<List<Staff>>(Staff, HttpStatus.OK);

	}
	@GetMapping("/getStaffById/{Id}")
	public ResponseEntity<List<Staff>> getStaffId(@PathVariable long Id) {
		Optional<Staff> staff = staffService.getStaffById(Id);
		return new ResponseEntity(staff, HttpStatus.OK);
	}
	@DeleteMapping("/DeleteById/{Id}")
	public String deleteCourse(@RequestParam Long Id) {
		staffService.deleteStaffById(Id);
		return "deleted Staff Data Sucessfully";
	}
	@PutMapping("/updatestaff")
	public Staff updatestaff(@RequestBody Staff s) {
		return staffService.updateStaffById(s);
	}

}
